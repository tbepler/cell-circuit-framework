function [ sys, X, Y, mRNA_X, mRNA_Y, gene_X, gene_Y ] = createRelaxationOscillator(...
    RNAP ...
    , Ribo ...
    , k_txn ... %currently ignored by sys
    , k_tln ... %currently ignored by sys
    , x_deg ...
    , x_init ...
    , y_deg ...
    , y_init ...
    , x_rna_deg ...
    , x_ribo_on ...
    , x_ribo_off ...
    , x_ribo_init ...
    , x_rna_init ...
    , y_rna_deg ...
    , y_ribo_on ...
    , y_ribo_off ...
    , y_ribo_init ...
    , y_rna_init ...
    , x_rnap_on ...
    , x_rnap_off ...
    , x_rnap_init ...
    , x_bindY ...
    , x_unbindY ...
    , x_copy_number ...
    , y_basal_rnap_on ...
    , y_basal_rnap_off ...
    , y_basal_rnap_init ...
    , y_bound_rnap_on ...
    , y_bound_rnap_off ...
    , y_bound_rnap_init ...
    , y_bindX ...
    , y_unbindX ...
    , y_bindY ...
    , y_unbindY ...
    , y_copy_number ...
    , x_coop ...
    , y_coop ...
    )

sys = SimpleResourceBioSystem( RNAP, Ribo, k_txn, k_tln );

%add proteins
X = sys.addProtein( 'X', x_deg, x_init );
Y = sys.addProtein( 'Y', y_deg, y_init );

%addmRNA( name, protein, degredation rate, ribo on rate, ribo off rate, initial value )
mRNA_X = sys.addmRNA( 'mRNA_X', X, x_rna_deg, x_ribo_on, x_ribo_off, x_ribo_init, x_rna_init );
mRNA_Y = sys.addmRNA( 'mRNA_Y', Y, y_rna_deg, y_ribo_on, y_ribo_off, y_ribo_init, y_rna_init );

%addGene( name, mRNA, promoterStates, rnapOn, rnapOff, transitionMatrix, copy# )
X_binding = repmat( X, 1, x_coop );
Y_binding = repmat( Y, 1, y_coop );
XY_binding = [X_binding, Y_binding];

X_states = { [], Y_binding };
X_RNAP_on = [ 0, x_rnap_on ];
X_RNAP_off = [ 0, x_rnap_off ];
X_RNAP_init = [ 0, x_rnap_init ];
X_trans = [
    0 , log(x_bindY)*y_coop ;
    log(x_unbindY)*y_coop , 0
    ];
gene_X = sys.addGene( 'Gene_X', mRNA_X, X_states, X_RNAP_on, X_RNAP_off ...
    ,X_RNAP_init , X_trans, x_copy_number );

Y_states = { [], X_binding, Y_binding, XY_binding };
Y_RNAP_on = [ y_basal_rnap_on, 0, y_bound_rnap_on, 0 ];
Y_RNAP_off = [ y_basal_rnap_off, 0, y_bound_rnap_off, 0 ];
Y_RNAP_init = [ y_basal_rnap_init, 0, y_bound_rnap_init, 0 ];
Y_trans = [
    0, log(y_bindX)*x_coop, log(y_bindY)*y_coop, 0 ;
    log(y_unbindX)*x_coop, 0, 0, log(y_bindY)*y_coop ;
    log(y_unbindY)*y_coop, 0, 0, log(y_bindX)*x_coop ;
    0, log(y_unbindY)*y_coop, log(y_unbindX)*x_coop, 0
    ];
gene_Y = sys.addGene( 'Gene_Y', mRNA_Y, Y_states, Y_RNAP_on, Y_RNAP_off ...
    ,Y_RNAP_init , Y_trans, y_copy_number );









end